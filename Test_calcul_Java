import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class CalculYes {
    private static final Map<Character, Integer> ROMAN_VALUES = new HashMap<>();

    static {
        ROMAN_VALUES.put('I', 1);
        ROMAN_VALUES.put('V', 5);
        ROMAN_VALUES.put('X', 10);
        ROMAN_VALUES.put('L', 50);
        ROMAN_VALUES.put('C', 100);
        ROMAN_VALUES.put('D', 500);
        ROMAN_VALUES.put('M', 1000);
    }

    public static void main(String[] args)  {
        System.out.println("Калькулятор запущен");
        System.out.println("-------------------");
        System.out.println("Введите число, опер. мат операции, второе число (типа 1 + 1 или II * III)");
        System.out.println("Вводить числа больше 10 нельзя!");
        Scanner scanner = new Scanner(System.in);
        String[] inputs = scanner.nextLine().toUpperCase().split(" ");

        if (inputs.length != 3) {
            System.out.println("Некорректный ввод и точка");
            scanner.close();
            return;
        }

        String input1 = inputs[0];
        char operation = inputs[1].charAt(0);
        String input2 = inputs[2];

        boolean isRoman1 = isRoman(input1);
        boolean isRoman2 = isRoman(input2);

        if (isRoman1 != isRoman2) {
            System.out.println("Оба числа должны быть либо римскими, либо арабскими.");
            return;
        }

        int number1 = isRoman1 ? toDecimal(input1) : Integer.parseInt(input1);
        int number2 = isRoman2 ? toDecimal(input2) : Integer.parseInt(input2);

        try {
            validateInput(number1, number2);
            int result = calculate(number1, number2, operation);

            if (isRoman1) {
                System.out.println("Результат: " + toRoman(result));
            } else {
                System.out.println("Результат: " + result);
            }
        } catch (NumberExceedsLimitException e) {
            System.out.println("Ошибка: " + e.getMessage());
        }

        System.out.println("-------------------");

    }

    public static String toRoman(int number) {
        if (number <= 0) {
            System.out.println("Ошибка: Римские числа не могут быть отрицательными или нулем.");
            return "Ошибка";
        }

        StringBuilder roman = new StringBuilder();
        int[] decimalValues = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};
        String[] romanSymbols = {"M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"};

        int remValue = number;

        for (int i = 0; i < decimalValues.length; i++) {
            while (remValue >= decimalValues[i]) {
                roman.append(romanSymbols[i]);
                remValue -= decimalValues[i];
            }
        }

        return roman.toString();
    }

    public static int toDecimal(String roman) {
        int result = 0;
        int prevValue = 0;

        for (int i = roman.length() - 1; i >= 0; i--) {
            int currentValue = ROMAN_VALUES.get(roman.charAt(i));

            if (currentValue < prevValue)
                result -= currentValue;
            else
                result += currentValue;

            prevValue = currentValue;
        }
        return result;
    }

    public static int calculate(int number1, int number2, char operation)  {

            switch (operation) {
            case '+':
                return  number1 + number2;
            case '-':
                return number1 - number2;
            case '*':
                return number1 * number2;
            case '/':
                if (number2 == 0) {
                    System.out.println("Ошибка: Деление на ноль.");
                    return 0;
                }
                return number1 / number2;
            default:
                System.out.println("Неверная операция");
                return 0;
        }

    }

    // является ли валидным
    public static boolean isRoman(String rome) {
        return rome.matches("^M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$");
    }

    public static void validateInput(int number, int number2) throws NumberExceedsLimitException {
        if (number > 10 || number2 > 10 || number < 0 || number2 < 0) {
            throw new NumberExceedsLimitException("Нельзя вводить числа в мат операциях больше 10 и меньше 0!");
        }
    }
}

class NumberExceedsLimitException extends Exception {
    public NumberExceedsLimitException(String message) {
        super(message);
    }

}
